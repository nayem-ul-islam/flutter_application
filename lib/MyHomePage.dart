import 'dart:async';
import 'dart:convert';

import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;

Future<BNDR> fetchBNDR() async {
  final response = await http.get(Uri.parse(
      'http://192.168.0.177/shantinagar-rest-api/api-fetch-single.php'));

  if (response.statusCode == 200) {
    return BNDR.fromJson(jsonDecode(response.body));
  } else {
    throw Exception('Failed to load album');
  }
}

// class Album {
//   final int userId;
//   final int id;
//   final String title;

//   Album({
//     required this.userId,
//     required this.id,
//     required this.title,
//   });

//   factory Album.fromJson(Map<String, dynamic> json) {
//     return Album(
//       userId: json['userId'],
//       id: json['id'],
//       title: json['title'],
//     );
//   }
// }
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class BNDR {
/*
{
  "pid": "352430"
} 
*/

  String? pid;

  BNDR({
    required this.pid,
  });
  BNDR.fromJson(Map<String, dynamic> json) {
    pid = json["pid"]?.toString();
  }
  Map<String, dynamic> toJson() {
    
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["pid"] = '352430';
    
    return data;
  }
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({Key? key}) : super(key: key);

  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  late Future<BNDR> futureBNDR;

  @override
  void initState() {
    super.initState();
    futureBNDR = fetchBNDR();
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'Fetch Data Example',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: Scaffold(
        appBar: AppBar(
          title: const Text('Fetch Data Example'),
        ),
        body: Center(
          child: FutureBuilder<BNDR>(
            future: futureBNDR,
            builder: (context, snapshot) {
              if (snapshot.hasData) {
                return Text(snapshot.data!.pid!);
              } else if (snapshot.hasError) {
                return Text('${snapshot.error}');
              }

              return const CircularProgressIndicator();
            },
          ),
        ),
      ),
    );
  }
}
//var data=json.decode(json.encode(snapshot.data));
